class Player {
    field int x, y; // the screen location of the player's ship. Used as the top-left corner from which to calculate the ship's coordinates
    field int shipTopXStart, shipTopYStart, shipTopLen, shipTopWidth; 
    field int shipMidXStart, shipMidYStart, shipMidLen, shipMidWidth;
    field int shipBaseXStart, shipBaseYStart, shipBaseLen, shipBaseWidth;
    field int moveDist; // number of pixels per movement

    constructor Player new(int Ax, int Ay) {
        let x = Ax;
        let y = Ay;
        let shipTopXStart = 10;
        let shipTopYStart = 0;
        let shipTopLen = 6;
        let shipTopWidth = 4;
        let shipMidXStart = 2;
        let shipMidYStart = 4;
        let shipMidLen = 22;
        let shipMidWidth = 2;
        let shipBaseXStart = 0;
        let shipBaseYStart = 6;
        let shipBaseLen = 26;
        let shipBaseWidth = 10;
        let moveDist = 2;
        return this;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /* Draw the player ship on the screen */
    method void draw() {
        do Screen.setColor(true);
        // ship top
        do Screen.drawRectangle(x + shipTopXStart, y + shipTopYStart, x + shipTopXStart + shipTopLen, y + shipTopYStart + shipTopWidth);
        // // ship mid layer
        do Screen.drawRectangle(x + shipMidXStart, y + shipMidYStart, x + shipMidXStart + shipMidLen, y + shipMidYStart + shipMidWidth);
        // // ship base
        do Screen.drawRectangle(x + shipBaseXStart, y + shipBaseYStart, x + shipBaseXStart + shipBaseLen, y + shipBaseYStart + shipBaseWidth);
        return;
    }

    method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(x + shipTopXStart, y + shipTopYStart, x + shipTopXStart + shipTopLen, y + shipTopYStart + shipTopWidth);
        // // ship mid layer
        do Screen.drawRectangle(x + shipMidXStart, y + shipMidYStart, x + shipMidXStart + shipMidLen, y + shipMidYStart + shipMidWidth);
        // // ship base
        do Screen.drawRectangle(x + shipBaseXStart, y + shipBaseYStart, x + shipBaseXStart + shipBaseLen, y + shipBaseYStart + shipBaseWidth);
        return;
    }

    method void moveLeft() {
        if (x > 1) {
            do erase();
            let x = x - moveDist;
            do draw();
        }
        return;
    }

    method void moveRight() {
        if (x < (511 - shipBaseLen - moveDist)) {
            do erase();
            let x = x + moveDist;
            do draw();
        }
        return;
    }
}